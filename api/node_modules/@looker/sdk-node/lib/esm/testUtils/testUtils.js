import * as fs from 'fs';
import path from 'path';
import { config } from 'dotenv';
import { readIniConfig } from '../nodeSettings';
var utf8 = 'utf-8';
var homeToRoost = '../../../../';
export var getRootPath = () => path.join(__dirname, homeToRoost);
export var rootFile = function rootFile() {
  var fileName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return path.join(getRootPath(), fileName);
};
export var TestConfig = function TestConfig() {
  var rootPath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  config();
  var testFile = 'data.yml.json';
  var envPrefix = 'LOOKERSDK';
  var sectionName = 'Looker';
  rootPath = rootPath || getRootPath();
  var localIni = process.env.LOOKERSDK_INI || rootFile('looker.ini');
  var testPath = rootFile('test/');
  var dataFile = "".concat(testPath).concat(testFile);
  var testData = JSON.parse(fs.readFileSync(dataFile, utf8));
  var testIni = "".concat(rootPath).concat(testData.iniFile);
  var section = readIniConfig(localIni, envPrefix, sectionName);
  var baseUrl = section.base_url;
  var timeout = parseInt(section.timeout, 10);
  var testSection = readIniConfig(localIni, envPrefix, sectionName);
  if (!fs.existsSync(localIni)) localIni = '';
  if (!fs.existsSync(testIni)) testIni = '';
  return {
    baseUrl,
    dataFile,
    localIni,
    rootPath,
    section,
    testData,
    testIni,
    testPath,
    testSection,
    timeout
  };
};
//# sourceMappingURL=testUtils.js.map